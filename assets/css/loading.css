/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v8.4.14,
* Autoprefixer: v10.4.7
* Browsers: last 4 version
*/


#loading {
    position: fixed;
    top: 0;
    left: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    z-index: 102;
    pointer-events: none;
    overflow: hidden;
}
#loading.loadingDone {
    z-index: 2;
}
#loading #lottie {
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
    width: calc((100vw / 3)* 1 - var(--spaceX) - 4rem);
    z-index: 2;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-transition: opacity ease-in-out .5s , -webkit-transform ease-in-out .75s;
    transition: opacity ease-in-out .5s , -webkit-transform ease-in-out .75s;
    -o-transition: transform ease-in-out .75s , opacity ease-in-out .5s;
    transition: transform ease-in-out .75s , opacity ease-in-out .5s;
    transition: transform ease-in-out .75s , opacity ease-in-out .5s , -webkit-transform ease-in-out .75s;
}
#loading.transform #lottie {
    -webkit-transform: translateX(calc(50vw - (((100vw / 3)* 1 - var(--spaceX) - 4rem)* .5) - var(--spaceX) - .25rem));
    -ms-transform: translateX(calc(50vw - (((100vw / 3)* 1 - var(--spaceX) - 4rem)* .5) - var(--spaceX) - .25rem));
    transform: translateX(calc(50vw - (((100vw / 3)* 1 - var(--spaceX) - 4rem)* .5) - var(--spaceX) - .25rem));
}

#loading .loadingCovers {
    width: 100%;
    height: 100%;
    position: absolute;
}

#loading .loadingCovers .loadingCover {
    width: 100%;
    height: 50%;
    -webkit-transition: all ease-in-out .55s;
    -o-transition: all ease-in-out .55s;
    transition: all ease-in-out .55s;
    background-color: var(--white);
}

#loading.loadingDone .loadingCovers .loadingCover:nth-child(1) {
    -webkit-transform: translateY(-100%);
    -ms-transform: translateY(-100%);
    transform: translateY(-100%);
}

#loading.loadingDone .loadingCovers .loadingCover:nth-child(2) {
    -webkit-transform: translateY(100%);
    -ms-transform: translateY(100%);
    transform: translateY(100%);
}

/*==================secondLoading*/
#loading.second-loading {
    background-color: var(--white);
}
#loading.second-loading .media-overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    mix-blend-mode: lighten;
    z-index: 2;
    -webkit-transition: all ease-in-out .5s;
    -o-transition: all ease-in-out .5s;
    transition: all ease-in-out .5s;
    overflow: hidden;
}

#loading.second-loading .second-loading-container {
    -ms-flex-pack: center;
    justify-content: space-between;
    opacity: 0;
    position: absolute;
    column-gap: 1rem;
}
#loading.second-loading.ink .second-loading-container{
    opacity: 1;
}
#loading.second-loading .second-loading-container:before {
    background-image: url(../img/ink-photo-frame.png);
    background-size: 100% 100%;
    content: "";
    height: 100%;
    left: 50%;
    position: absolute;
    top: 0;
    -webkit-transform: translateX(-1.25%);
    -ms-transform: translateX(-1.25%);
    transform: translateX(-1.25%);
    width: 4000%;
    pointer-events: none;
}
#loading.second-loading.ink .second-loading-container:before{
    -webkit-animation: ink-transition 1.2s steps(39) forwards;
    animation: ink-transition 1.2s steps(39) forwards;
}
@-webkit-keyframes ink-transition {
    0% {
        -webkit-transform: translateX(-1.25%);
        transform: translateX(-1.25%);
    }
    99% {
        -webkit-transform: translateX(-98.75%);
        transform: translateX(-98.75%);
        opacity: 1;
    }
    100% {
        -webkit-transform: translateX(-98.75%);
        transform: translateX(-98.75%);
        opacity: 0;
    }
}
@keyframes ink-transition {
    0% {
        -webkit-transform: translateX(-1.25%);
        transform: translateX(-1.25%);
    }
    99% {
        -webkit-transform: translateX(-98.75%);
        transform: translateX(-98.75%);
        opacity: 1;
    }
    100% {
        -webkit-transform: translateX(-98.75%);
        transform: translateX(-98.75%);
        opacity: 0;
    }
}


#loading.second-loading.transform .second-loading-container{
    -webkit-animation: loadingTransform .75s forwards;
    animation: loadingTransform .75s forwards;
    -webkit-animation-timing-function: cubic-bezier(0.770, 0.000, 0.175, 1.000);
    animation-timing-function: cubic-bezier(0.770, 0.000, 0.175, 1.000);
}
@keyframes loadingTransform {
    from{
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        height: 5rem;
    }
    to{
        top: calc(var(--headerHeight)*.5 - (2rem*.5));
        left: var(--spaceX);
        transform: translate(0, 0);
        height: 2rem;
    }
}
body[data-pagetype="archiveProject"] #loading.second-loading.transform .second-loading-container ,
body[data-pagetype="archiveBlog"] #loading.second-loading.transform .second-loading-container {
    -webkit-animation: loadingTransformArchive .75s forwards;
    animation: loadingTransformArchive .75s forwards;
}
@keyframes loadingTransformArchive {
    from{
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        height: 5rem;
    }
    to{
        top: calc(var(--headerHeight)*.35 - (2rem*.5));
        left: var(--spaceX);
        transform: translate(0, 0);
        height: 2rem;
    }
}
#loading.second-loading .second-loading-container img {
    object-position: left;
}
header .identity img:first-child{
    width: 3rem;
}
#loading.second-loading .second-loading-container img:first-child{
    width: 5rem;
}
#loading.second-loading.transform .second-loading-container img:first-child{
    animation: loadingTransformImgF .75s forwards;
    animation-delay: .5s;
}
@keyframes loadingTransformImgF {
    to{
        width: 3rem;
    }
}
header .identity img:last-child{
    width: 12rem;
}
#loading.second-loading .second-loading-container img:last-child{
    width: 18rem;
}
#loading.second-loading.transform .second-loading-container img:last-child{
    animation: loadingTransformImgL .75s forwards;
    animation-delay: .5s;
}
@keyframes loadingTransformImgL {
    to{
        width: 12rem;
    }
}

#loading.second-loading.loadingDone{
     -webkit-animation: loadingOpacity .5s forwards;
     animation: loadingOpacity .5s forwards;
}

@-webkit-keyframes loadingOpacity {
    from{
        opacity: 1;
    }
    to{
        opacity: 0;
    }
}

@keyframes loadingOpacity {
    from{
        opacity: 1;
    }
    to{
        opacity: 0;
    }
}

@media only screen and (max-width: 768px){
    #loading #lottie {
        width: 12rem;
    }
    #loading.transform #lottie {
        -webkit-transform: translateX(calc(100vw - var(--spaceX) ));
        -ms-transform: translateX(calc(100vw - var(--spaceX) ));
        transform: translateX(calc(100vw - var(--spaceX) ));
        opacity: 0;
    }
    header .identity img:first-child{
        width: 2rem;
    }
    #loading.second-loading .second-loading-container img:first-child{
        width: 3rem;
    }
    @keyframes loadingTransformImgF {
        to{
            width: 2rem;
        }
    }
    header .identity img:last-child{
        width: 8rem;
    }
    #loading.second-loading .second-loading-container img:last-child{
        width: 10rem;
    }
    @keyframes loadingTransformImgL {
        to{
            width: 8rem;
        }
    }
    @keyframes loadingTransform {
        from{
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            height: 5rem;
        }
        to{
            top: calc(100% - var(--headerHeight)*.5 - (2rem*.5));
            left: var(--spaceX);
            transform: translate(0, 0);
            height: 2rem;
        }
    }
}
@media only screen and (min-width: 640px) and (max-width:768px){

}
@media only screen and (min-width: 769px) and (max-width:1199px){
    #loading #lottie {
        width: calc(50vw - var(--spaceX) - 5rem);
    }

    #loading.transform #lottie {
        -webkit-transform: translateX(calc(50vw - ((50vw - var(--spaceX) - 5rem) * .5) - var(--spaceX) - .25rem));
        -ms-transform: translateX(calc(50vw - ((50vw - var(--spaceX) - 5rem) * .5) - var(--spaceX) - .25rem));
        transform: translateX(calc(50vw - ((50vw - var(--spaceX) - 5rem) * .5) - var(--spaceX) - .25rem));
    }
}